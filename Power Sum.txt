Problem Name: Power Sum 
Problem Code: POWSUM
Description:
You are given a sequence A of N integers such that every element is a non-negative power of 2.
A sequence is called good if its sum is a non-negative power of 2. You would like to turn A into a good sequence.
To achieve this, you can perform the following operation on A:
Pick a non-empty subsequence of A, pick a positive integer X such that X≤230, and multiply every element of this subsequence by X.
Find the minimum number of operations required to turn A into a good sequence. Also, find one sequence of operations which does this. If there are multiple possible answers, you may find any of them.

Input Format:

The first line of input contains a single integer T, denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer N.
The second line of each test case contains N space-separated integers A1,A2,…,AN.
Output Format:

For each test case, print the answer in the following format:
First, print one line containing an integer M, denoting the minimum number of moves required.
Then, print 2M lines describing M operations.
Each operation is described by 2 lines.
On the first line, print two space-separated integers K and X, denoting the size of the subsequence and the multiplier for this operation.
On the second line, print K distinct space-separated integers denoting the indices of the elements chosen to be multiplied in this operation. These K integers can be printed in any order.

Sample Input 1 
2
4
4 8 4 32
3
2 2 4
Sample Output 1 
1
3 2
1 2 3
0


"C++ Code"

#include <iostream>
#include<bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	int t;
	cin>>t;
	while(t--){
	    int i,n,s=0,b,j=1;
	    cin>>n;
	    int a[n],d[n];
	    for(i=0;i<n;i++){
	        cin>>a[i];
	        d[i]=a[i];
	        s=s+a[i];
	    }
	    sort(a,a+n);
	    b=ceil(log2(s));
	    auto c=find(d,d+n,a[0]);
	    j=((pow(2,b)-s)+a[0])/a[0];
	    if((s&s-1)==0){
	        cout<<0<<endl;
	    }
	    else{
	        cout<<1<<endl;
	        cout<<1<<" "<<j;
	        cout<<endl;
	        cout<<(distance(d,c))+1<<endl;
	    }
	}
	return 0;
}
