Problem Name:Chef and Fixed Deposits 
Problem Code: MINFD 
Description:

Chef wants to make a purchase. For this, he needs X gold coins, but he has none at the moment.
Chef has N fixed deposits, the ith of which is worth Ai coins. He wants to open the minimum number of these deposits so that he has at least X coins.
You have to tell Chef the minimum number of fixed deposits he must open in order to have X coins, or say that this is impossible.

Input Format:

The first line of input contains a single integer T, denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains two space-separated integers — N and X, as described in the statement.
The second line of each test case contains N space-separated integers — the ith of which is Ai.
Output Format:

For each test case, output one line containing the answer — the minimum number of FDs Chef must open to have at least X coins. If it is not possible for him to open FDs such that he has at least X coins, output −1.

Constraints
1≤T,Ai,N≤100
1≤X≤104
Subtasks
Subtask #1 (100 points): Original constraints

Sample Input 1: 
4
4 6
4 3 5 1
3 15
1 5 3
2 5
10 3
4 7
1 2 3 4
Sample Output 1: 
2
-1
1
2

"C++ Code"

#include <iostream>
#include <bits/stdc++.h>
using namespace std;

int main() {
	// your code goes here
	int tc;
	cin>>tc;
	while(tc--){
	    int d,w,i,j,s=0;
	    bool flag=false;
	        cin>>d>>w;
	        int arr[d];
	        for(i=0;i<d;i++){
	            cin>>arr[i];
	        }
	    sort(arr,arr+d,greater<>());
	    for(j=0;j<d;j++){
	        s=s+arr[j];
	        if(s>=w){
	            flag=true;
	            break;
	        }
	    }
	    if(flag==true)
	    cout<<j+1<<endl;
	    else
	    cout<<"-1"<<endl;
	}
	return 0;
}
